AWSTemplateFormatVersion: 2010-09-09
Resources:
  CFNLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: picSearchCFN
      Handler: LF2.lambda_handler
      Role: !GetAtt 
        - CFNLambdaRole
        - Arn
      Code:
        S3Bucket: photo-search-project-2
        S3Key: LF2.zip
      Runtime: python3.9
      Timeout: 300
      Layers:
        - !Ref lambdaLayerCFN
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c0a3d412-1f1e-41a8-bf8c-4a564283b693
  lambdaLayerCFN:
    Type: 'AWS::Lambda::LayerVersion'
    Properties:
      CompatibleRuntimes:
        - python3.9
      Content:
        S3Bucket: photo-search-project-2
        S3Key: lambda_packages/python.zip
      Description: Lambda layer for requests auth
      LayerName: lambda_layer_cfn
      LicenseInfo: MIT
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 10ea110e-91c2-4d14-926f-191b282c700c
  CFNLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: cfn_lambdaRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWSLambdaBasicExecutionRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
        - PolicyName: AmazonS3FullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 's3:*'
                Resource:
                  - 'arn:aws:s3:::photo-search-project-2'
                  - 'arn:aws:s3:::photo-search-project-2/*'
        - PolicyName: AmazonLexFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'lex:*'
                Resource: '*'
        - PolicyName: AmazonRekognitionFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'rekognition:*'
                Resource: '*'
        - PolicyName: AmazonOpenSearchServiceFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'es:*'
                Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5d807c6f-2b9a-4a53-99d5-2680c7ac657d
  BotRuntimeRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lexv2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: LexRuntimeRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'polly:SynthesizeSpeech'
                  - 'comprehend:DetectSentiment'
                Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 52677107-4b1d-4a83-8440-4b1d8e5b1b19
  PhotoSearchCFNBot:
    DependsOn: BotRuntimeRole
    Type: 'AWS::Lex::Bot'
    Properties:
      Name: PhotoSearchWithCFN
      RoleArn: !GetAtt 
        - BotRuntimeRole
        - Arn
      DataPrivacy:
        ChildDirected: false
      IdleSessionTTLInSeconds: 300
      Description: How to create a PhotoSearch bot with CFN
      AutoBuildBotLocales: false
      BotLocales:
        - LocaleId: en_US
          Description: Book a trip bot Locale
          NluConfidenceThreshold: 0.4
          VoiceSettings:
            VoiceId: Ivy
          SlotTypes:
            - Name: PhotoTypes
              Description: Slot Type description
              SlotTypeValues:
                - SampleValue:
                    Value: cats
                - SampleValue:
                    Value: dogs
                - SampleValue:
                    Value: birds
                - SampleValue:
                    Value: trees
              ValueSelectionSetting:
                ResolutionStrategy: ORIGINAL_VALUE
          Intents:
            - Name: SearchIntent
              Description: Intent to search photos
              SampleUtterances:
                - Utterance: 'show me {PhotoType}'
                - Utterance: 'show me photos with {PhotoType} in them'
              SlotPriorities:
                - Priority: 1
                  SlotName: PhotoType
              Slots:
                - Name: PhotoType
                  Description: something
                  SlotTypeName: PhotoTypes
                  ValueElicitationSetting:
                    SlotConstraint: Required
                    PromptSpecification:
                      MessageGroupsList:
                        - Message:
                            PlainTextMessage:
                              Value: What type of photos do you want to search?
                      MaxRetries: 3
                      AllowInterrupt: false
            - Name: FallbackIntent
              Description: Default intent when no other intent matches
              ParentIntentSignature: AMAZON.FallbackIntent
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c2848161-f225-42f7-b70f-9f627a1c5c5b
  PhotoSearchCFNBotVersionWithCFN:
    DependsOn: PhotoSearchCFNBot
    Type: 'AWS::Lex::BotVersion'
    Properties:
      BotId: !Ref PhotoSearchCFNBot
      BotVersionLocaleSpecification:
        - LocaleId: en_US
          BotVersionLocaleDetails:
            SourceBotVersion: DRAFT
      Description: PhotoSearch Version
    Metadata:
      'AWS::CloudFormation::Designer':
        id: eb60b82f-dc7b-4d60-8fb2-e9c207aab2f3
  FirstBotAliasWithCFN:
    DependsOn: PhotoSearchCFNBotVersionWithCFN
    Type: 'AWS::Lex::BotAlias'
    Properties:
      BotId: !Ref PhotoSearchCFNBot
      BotAliasName: PhotoSearchProd
      BotVersion: !GetAtt 
        - PhotoSearchCFNBotVersionWithCFN
        - BotVersion
      SentimentAnalysisSettings:
        DetectSentiment: true
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1cec9d29-c107-4afa-9148-3e3a6d67510a
  LF6XHI:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: LF1-Final
      Handler: LF1-Final.lambda_handler
      Role: !GetAtt 
        - CFNLambdaRole
        - Arn
      Code:
        S3Bucket: photo-search-project-2
        S3Key: LF1.zip
      Runtime: python3.9
      Timeout: 300
      Layers:
        - !Ref lambdaLayerCFN
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6d4bcb78-4a4f-4f38-b054-5f2517719c38
  IAMR4D17E:
    DependsOn: S3B1PSEZ
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: API_EXEC
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWSLambdaBasicExecutionRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
        - PolicyName: AmazonS3PutAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 's3:PutObject'
                Resource:
                  - 'arn:aws:s3:::cs-gy-9223-b2'
                  - 'arn:aws:s3:::cs-gy-9223-b2/*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 10fd4efa-fe5f-4c03-92e0-1a3475574473
  S3B1AW9O:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: B1
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 223d0950-9ce0-40c9-aba2-8f31827db03c
  S3BPHV52:
    DependsOn:
      - S3B1AW9O
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3B1AW9O
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - 's3:GetObject'
          Resource:
            - !Sub 'arn:aws:s3:::${S3B1AW9O}'
            - !Sub 'arn:aws:s3:::${S3B1AW9O}/*'
          Principal:
            AWS: '-''*'''
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7ed002b4-a927-4d2a-b236-e8c38f202f2b
  S3B1PSEZ:
    DependsOn: LF6XHI
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: B2
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      NotificationConfiguration:
        LambdaConfigurations:
          - Function: !Ref LF6XHI
            Event: 's3:ObjectCreated:*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 315493cc-4d6e-45f0-9ff7-d9e74d9879e7
  S3BPRT0G:
    DependsOn: S3B1PSEZ
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3B1PSEZ
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - 's3:GetObject'
          Resource:
            - !Sub 'arn:aws:s3:::${S3B1PSEZ}'
            - !Sub 'arn:aws:s3:::${S3B1PSEZ}/*'
          Principal:
            AWS: '-''*'''
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 29d96939-dd20-4989-9002-1f89448a4d12
  IAMR42TTH:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: Transcribe_role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: null
            Action:
              - 'transcribe:StartStreamTranscription'
              - 'transcribe:StartStreamTranscriptionWebSocket'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 31f14369-bf0c-4510-ac77-ff4f724800dd
  AGRAJ38V:
    DependsOn: S3B1PSEZ
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      ApiKeySourceType: HEADER
      BinaryMediaTypes:
        - '*/*'
      BodyS3Location:
        Bucket: photo-search-project-2
        Key: swagger.yaml
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c6746086-6377-424d-bc80-9ef78e9812f1
  AGAKY02S:
    Type: 'AWS::ApiGateway::ApiKey'
    Properties:
      Enabled: true
      GenerateDistinctId: true
      Name: API_KEY
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f942e407-3b38-4085-8bd1-1b1730a07acf
  ED4SPT8:
    Type: 'AWS::Elasticsearch::Domain'
    Properties:
      DomainName: ES1
      ElasticsearchVersion: '7.10'
      ElasticsearchClusterConfig:
        DedicatedMasterEnabled: false
        InstanceCount: '1'
        InstanceType: t3.small.search
      EBSOptions:
        EBSEnabled: true
        Iops: '0'
        VolumeSize: '10'
        VolumeType: gp3
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ab1178ed-5711-4ca8-8f55-e1df22af17d0
Outputs:
  WebsiteURL:
    Value: !GetAtt 
      - S3B1AW9O
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - S3B1AW9O
          - DomainName
    Description: Name of S3 bucket to hold website content
Metadata:
  'AWS::CloudFormation::Designer':
    52677107-4b1d-4a83-8440-4b1d8e5b1b19:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
    c2848161-f225-42f7-b70f-9f627a1c5c5b:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 90
      z: 1
      embeds: []
    eb60b82f-dc7b-4d60-8fb2-e9c207aab2f3:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 210
      z: 1
      embeds: []
    1cec9d29-c107-4afa-9148-3e3a6d67510a:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 210
      z: 1
      embeds: []
    5d807c6f-2b9a-4a53-99d5-2680c7ac657d:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 90
      z: 1
      embeds: []
    10ea110e-91c2-4d14-926f-191b282c700c:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 210
      z: 1
      embeds: []
    c0a3d412-1f1e-41a8-bf8c-4a564283b693:
      size:
        width: 60
        height: 60
      position:
        x: 360
        'y': 340
      z: 1
      embeds: []
    6d4bcb78-4a4f-4f38-b054-5f2517719c38:
      size:
        width: 60
        height: 60
      position:
        x: 20
        'y': 320
      z: 1
      embeds: []
    10fd4efa-fe5f-4c03-92e0-1a3475574473:
      size:
        width: 60
        height: 60
      position:
        x: -300
        'y': 510
      z: 1
      embeds: []
      dependson:
        - 315493cc-4d6e-45f0-9ff7-d9e74d9879e7
    223d0950-9ce0-40c9-aba2-8f31827db03c:
      size:
        width: 60
        height: 60
      position:
        x: -310
        'y': 420
      z: 1
      embeds: []
    7ed002b4-a927-4d2a-b236-e8c38f202f2b:
      size:
        width: 60
        height: 60
      position:
        x: -200
        'y': 420
      z: 1
      embeds: []
      dependson:
        - 223d0950-9ce0-40c9-aba2-8f31827db03c
    315493cc-4d6e-45f0-9ff7-d9e74d9879e7:
      size:
        width: 60
        height: 60
      position:
        x: -200
        'y': 510
      z: 1
      embeds: []
    29d96939-dd20-4989-9002-1f89448a4d12:
      size:
        width: 60
        height: 60
      position:
        x: -80
        'y': 510
      z: 1
      embeds: []
      isassociatedwith:
        - 223d0950-9ce0-40c9-aba2-8f31827db03c
      dependson:
        - 315493cc-4d6e-45f0-9ff7-d9e74d9879e7
    31f14369-bf0c-4510-ac77-ff4f724800dd:
      size:
        width: 60
        height: 60
      position:
        x: -280
        'y': 200
      z: 1
      embeds: []
    c6746086-6377-424d-bc80-9ef78e9812f1:
      size:
        width: 150
        height: 150
      position:
        x: -240
        'y': 660
      z: 1
      embeds: []
      dependson:
        - 315493cc-4d6e-45f0-9ff7-d9e74d9879e7
    f942e407-3b38-4085-8bd1-1b1730a07acf:
      size:
        width: 60
        height: 60
      position:
        x: -60
        'y': 630
      z: 1
      embeds: []
    ab1178ed-5711-4ca8-8f55-e1df22af17d0:
      size:
        width: 60
        height: 60
      position:
        x: -80
        'y': 420
      z: 0
      embeds: []
